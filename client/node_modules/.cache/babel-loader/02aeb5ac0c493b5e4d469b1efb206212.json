{"ast":null,"code":"var _jsxFileName = \"/Users/letrung/Desktop/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n    setCredentials({\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/letrung/Desktop/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","googleSignInStart","emailSignInStart","CustomButton","FormInput","SignIn","userCredentials","setCredentials","email","password","handleSubmit","e","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/user/user.actions\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    emailSignInStart(email, password);\n    setCredentials({\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign In with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}