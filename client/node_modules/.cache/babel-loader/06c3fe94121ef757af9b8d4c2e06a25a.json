{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMjK7HupytGs_rgmbi0U0RmDGVtrG-pCM\",\n  authDomain: \"crown-clothing-60347.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-60347.firebaseio.com\",\n  projectId: \"crown-clothing-60347\",\n  storageBucket: \"crown-clothing-60347.appspot.com\",\n  messagingSenderId: \"416111666817\",\n  appId: \"1:416111666817:web:adb14c6ffd156483318f80\",\n  measurementId: \"G-8M7LDQH2KZ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: \"select_acount\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/letrung/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,WAAW,EAAE,6CAHQ;AAIrBC,EAAAA,SAAS,EAAE,sBAJU;AAKrBC,EAAAA,aAAa,EAAE,kCALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,OAAO,MAAMiB,0BAA0B,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACzE,QAAMC,aAAa,GAAGpB,SAAS,CAACqB,UAAV,CAAqBH,aAArB,CAAtB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ;AACD,CAHM;AAIP,MAAME,QAAQ,GAAG,IAAIpC,QAAQ,CAAC8B,IAAT,CAAcO,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAMV,IAAI,CAACW,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMjK7HupytGs_rgmbi0U0RmDGVtrG-pCM\",\n  authDomain: \"crown-clothing-60347.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-60347.firebaseio.com\",\n  projectId: \"crown-clothing-60347\",\n  storageBucket: \"crown-clothing-60347.appspot.com\",\n  messagingSenderId: \"416111666817\",\n  appId: \"1:416111666817:web:adb14c6ffd156483318f80\",\n  measurementId: \"G-8M7LDQH2KZ\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    \n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef)\n}\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ promt: \"select_acount\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}